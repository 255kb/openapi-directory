openapi: 3.0.0
servers:
  - url: https://drivelabels.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: An API for managing Drive Labels
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Drive Labels API
  version: v2
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://drivelabels.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: drivelabels
externalDocs:
  url: https://developers.google.com/drive/labels
tags:
  - name: labels
paths:
  /v2/labels:
    get:
      description: "-------------------------------------------------------------------------- ## Label APIs --------------------------------------------------------------- List Labels."
      operationId: drivelabels.labels.list
      parameters:
        - description: The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.
          in: query
          name: languageCode
          schema:
            type: string
        - description: Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`.
          in: query
          name: minimumRole
          schema:
            enum:
              - LABEL_ROLE_UNSPECIFIED
              - READER
              - APPLIER
              - ORGANIZER
              - EDITOR
            type: string
        - description: "Maximum number of Labels to return per page. Default: 50. Max: 200."
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The token of the page to return.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Whether to include only published labels in the results. * When `true`, only the current published label revisions will be returned. Disabled labels will be included. Returned Label resource names will reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions will be returned, which may not by published. Returned Label resource names will not reference a specific revision (`labels/{id}`).
          in: query
          name: publishedOnly
          schema:
            type: boolean
        - description: Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer.
          in: query
          name: useAdminAccess
          schema:
            type: boolean
        - description: When specified, only certain fields belonging to the indicated view will be returned.
          in: query
          name: view
          schema:
            enum:
              - LABEL_VIEW_BASIC
              - LABEL_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleAppsDriveLabelsV2ListLabelsResponse"
          description: Successful response
      tags:
        - labels
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v2/{name}":
    get:
      description: "Get a Label by its resource name. Resource name may be any of: * `labels/{id}` - See to `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the Label. * `labels/{id}@published` - Gets the current published revision of the Label. * `labels/{id}@{revision_id}` - Gets the Label at the specified revision ID."
      operationId: drivelabels.labels.get
      parameters:
        - description: "Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}`"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The BCP-47 language code to use for evaluating localized Field labels. When not specified, values in the default configured language will be used.
          in: query
          name: languageCode
          schema:
            type: string
        - description: Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
          in: query
          name: useAdminAccess
          schema:
            type: boolean
        - description: When specified, only certain Fields belonging to the indicated view will be returned.
          in: query
          name: view
          schema:
            enum:
              - LABEL_VIEW_BASIC
              - LABEL_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleAppsDriveLabelsV2Label"
          description: Successful response
      tags:
        - labels
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleAppsDriveLabelsV2BadgeColors:
      description: The color derived from BadgeConfig and coerced to the nearest supported color.
      properties:
        backgroundColor:
          $ref: "#/components/schemas/GoogleTypeColor"
          description: Output only. Badge background which pairs with the foreground
          readOnly: true
        foregroundColor:
          $ref: "#/components/schemas/GoogleTypeColor"
          description: Output only. Badge foreground which pairs with the background
          readOnly: true
        soloColor:
          $ref: "#/components/schemas/GoogleTypeColor"
          description: Output only. Color that can be used for text without a background
          readOnly: true
      type: object
    GoogleAppsDriveLabelsV2BadgeConfig:
      description: Badge status of the label.
      properties:
        color:
          $ref: "#/components/schemas/GoogleTypeColor"
          description: The color of the badge. When not specified, no badge will be rendered. This color will be coerced into the closest recommended supported color.
        priorityOverride:
          description: Override the default global priority of this badge. When set to 0, the default priority heuristic will be used.
          format: int64
          type: string
      type: object
    GoogleAppsDriveLabelsV2Field:
      description: Defines a field which has a display name, data type, and other configuration options. This field defines the kind of metadata that may be set on a Drive item.
      properties:
        appliedCapabilities:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldAppliedCapabilities"
          description: Output only. The capabilities this user has on this Field and its value when the Label is applied on Drive items.
          readOnly: true
        createTime:
          description: Output only. The time this field was created.
          format: google-datetime
          readOnly: true
          type: string
        creator:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who created this field.
          readOnly: true
        dateOptions:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldDateOptions"
          description: Date field options.
        disableTime:
          description: Output only. The time this field was disabled. This value has no meaning when the field is not disabled.
          format: google-datetime
          readOnly: true
          type: string
        disabler:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who disabled this field. This value has no meaning when the field is not disabled.
          readOnly: true
        displayHints:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldDisplayHints"
          description: Output only. UI Display hints for rendering a Field.
          readOnly: true
        id:
          description: Output only. The key of a field, unique within a Label or Library. This value is autogenerated, and will match the form `([a-zA-Z0-9_])+
          readOnly: true
          type: string
        integerOptions:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldIntegerOptions"
          description: Integer field options.
        lifecycle:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2Lifecycle"
          description: Output only. The lifecycle of this Field.
          readOnly: true
        lockStatus:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LockStatus"
          description: Output only. The LockStatus of this field.
          readOnly: true
        properties:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldProperties"
          description: The basic properties of the field.
        publisher:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who published this field. This value has no meaning when the field is not published.
          readOnly: true
        queryKey:
          description: 'Output only. The key to use when constructing Drive search queries to find files based on values defined for this Field on files. For example: "`{query_key}` > 2001-01-01"'
          readOnly: true
          type: string
        schemaCapabilities:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldSchemaCapabilities"
          description: Output only. The capabilities this user has when editing this Field
          readOnly: true
        selectionOptions:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldSelectionOptions"
          description: Selection field options.
        textOptions:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldTextOptions"
          description: Text field options.
        updateTime:
          description: Output only. The time this field was updated.
          format: google-datetime
          readOnly: true
          type: string
        updater:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who modified this field.
          readOnly: true
        userOptions:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldUserOptions"
          description: User field options.
      type: object
    GoogleAppsDriveLabelsV2FieldAppliedCapabilities:
      description: The capabilities related to this field on applied metadata.
      properties:
        canRead:
          description: Whether the user can read related applied metadata on items.
          type: boolean
        canSearch:
          description: Whether the user can search for drive items referencing this field.
          type: boolean
        canWrite:
          description: Whether the user can set this field on drive items.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2FieldDateOptions:
      description: Options for the date field type.
      properties:
        dateFormat:
          description: Output only. ICU Date format.
          readOnly: true
          type: string
        dateFormatType:
          description: Localized date formatting option. Field values will be rendered in this format according to their locale.
          enum:
            - DATE_FORMAT_UNSPECIFIED
            - LONG_DATE
            - SHORT_DATE
          type: string
        maxValue:
          $ref: "#/components/schemas/GoogleTypeDate"
          description: Output only. Maximum valid value (year, month, day).
          readOnly: true
        minValue:
          $ref: "#/components/schemas/GoogleTypeDate"
          description: Output only. Minimum valid value (year, month, day).
          readOnly: true
      type: object
    GoogleAppsDriveLabelsV2FieldDisplayHints:
      description: UI Display hints for rendering a Field.
      properties:
        disabled:
          description: Whether the field should be shown in the UI as disabled.
          type: boolean
        hiddenInSearch:
          description: This Field should be hidden in the search menu.
          type: boolean
        required:
          description: Whether the Field should be shown as required in the UI.
          type: boolean
        shownInApply:
          description: This Field should be shown when applying values to a Drive item.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2FieldIntegerOptions:
      description: Options for the Integer field type.
      properties:
        maxValue:
          description: Output only. The maximum valid value for the integer field.
          format: int64
          readOnly: true
          type: string
        minValue:
          description: Output only. The minimum valid value for the integer field.
          format: int64
          readOnly: true
          type: string
      type: object
    GoogleAppsDriveLabelsV2FieldListOptions:
      description: Options for a multi-valued variant of an associated field type.
      properties:
        maxEntries:
          description: Maximum number of entries permitted.
          format: int32
          type: integer
      type: object
    GoogleAppsDriveLabelsV2FieldProperties:
      description: The basic properties of the field.
      properties:
        displayName:
          description: Required. The display text to show in the UI identifying this field.
          type: string
        insertBeforeField:
          description: Input only. Insert or move this Field to be ordered before the indicated Field. If empty, the Field will be placed at the end of the list.
          type: string
        required:
          description: Whether the field should be marked as required.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2FieldSchemaCapabilities:
      description: The capabilities related to this Field when editing the Field.
      properties:
        canDelete:
          description: Whether the user can delete this Field. The user must have permissions and the Field must be deprecated.
          type: boolean
        canDisable:
          description: Whether the user can disable this Field. The user must have permissions and this Field must not already be disabled.
          type: boolean
        canEnable:
          description: Whether the user can enable this Field. The user must have permissions and this Field must be disabled.
          type: boolean
        canUpdate:
          description: Whether the user can change this field.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2FieldSelectionOptions:
      description: Options for the selection field type.
      properties:
        choices:
          description: The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`.
          items:
            $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice"
          type: array
        listOptions:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldListOptions"
          description: When specified, indicates that this field support a list of values. Once the field is published, this cannot be changed.
      type: object
    GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice:
      description: Selection field Choice.
      properties:
        appliedCapabilities:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities"
          description: Output only. The capabilities related to this Choice on applied metadata.
          readOnly: true
        createTime:
          description: Output only. The time this Choice was created.
          format: google-datetime
          readOnly: true
          type: string
        creator:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who created this Choice.
          readOnly: true
        disableTime:
          description: Output only. The time this Choice was disabled. This value has no meaning when the Choice is not disabled.
          format: google-datetime
          readOnly: true
          type: string
        disabler:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who disabled this Choice. This value has no meaning when the option is not disabled.
          readOnly: true
        displayHints:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints"
          description: Output only. UI Display hints for rendering a Choice.
          readOnly: true
        id:
          description: The unique value of the Choice. This ID will be autogenerated, and will match the form `([a-zA-Z0-9_])+`.
          type: string
        lifecycle:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2Lifecycle"
          description: Output only. Lifecycle of the Choice.
          readOnly: true
        lockStatus:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LockStatus"
          description: Output only. The LockStatus of this Choice.
          readOnly: true
        properties:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties"
          description: Basic properties of the Choice.
        publishTime:
          description: Output only. The time this Choice was published. This value has no meaning when the Choice is not published.
          format: google-datetime
          readOnly: true
          type: string
        publisher:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who published this Choice. This value has no meaning when the Choice is not published.
          readOnly: true
        schemaCapabilities:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities"
          description: Output only. The capabilities related to this option when editing the option.
          readOnly: true
        updateTime:
          description: Output only. The time this Choice was updated last.
          format: google-datetime
          readOnly: true
          type: string
        updater:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who updated this Choice last.
          readOnly: true
      type: object
    GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities:
      description: The capabilities related to this Choice on applied metadata.
      properties:
        canRead:
          description: Whether the user can read related applied metadata on items.
          type: boolean
        canSearch:
          description: Whether the user can use this Choice in search queries.
          type: boolean
        canSelect:
          description: Whether the user can select this Choice on an item.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints:
      description: UI Display hints for rendering a Option.
      properties:
        badgeColors:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2BadgeColors"
          description: The colors to use for the badge. Coerced to Google Material colors based on the chosen `properties.badge_config.color`.
        badgePriority:
          description: The priority of this badge, used to compare and sort between multiple badges. A lower number means that the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the Label, and field and option priority.
          format: int64
          type: string
        darkBadgeColors:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2BadgeColors"
          description: The dark-mode color to use for the badge. Coerced to Google Material colors based on the chosen `properties.badge_config.color`.
        disabled:
          description: Whether the option should be shown in the UI as disabled.
          type: boolean
        hiddenInSearch:
          description: This option should be hidden in the search menu.
          type: boolean
        shownInApply:
          description: This option should be shown in the menu when applying values to a Drive item.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties:
      description: Basic properties of the Choice.
      properties:
        badgeConfig:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2BadgeConfig"
          description: The badge configuration for this Choice. When set, the Label that owns this Choice will be considered a "badged label".
        description:
          description: The description of this Label.
          type: string
        displayName:
          description: Required. The display text to show in the UI identifying this field.
          type: string
        insertBeforeChoice:
          description: Input only. Insert or move this Choice to be ordered before the indicated Choice. If empty, the Choice will be placed at the end of the list.
          type: string
      type: object
    GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities:
      description: The capabilities related to this Choice when editing the Choice.
      properties:
        canDelete:
          description: Whether the user can delete this Choice.
          type: boolean
        canDisable:
          description: Whether the user can disable this Chioce.
          type: boolean
        canEnable:
          description: Whether the user can enable this Choice.
          type: boolean
        canUpdate:
          description: Whether the user can update this Choice.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2FieldTextOptions:
      description: Options for the Text field type.
      properties:
        maxLength:
          description: Output only. The maximum valid length of values for the text field.
          format: int32
          readOnly: true
          type: integer
        minLength:
          description: Output only. The minimum valid length of values for the text field.
          format: int32
          readOnly: true
          type: integer
      type: object
    GoogleAppsDriveLabelsV2FieldUserOptions:
      description: Options for the user field type.
      properties:
        listOptions:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2FieldListOptions"
          description: When specified, indicates that this field support a list of values. Once the field is published, this cannot be changed.
      type: object
    GoogleAppsDriveLabelsV2Label:
      description: A Label defines a taxonomy which may be applied to a Drive items in order to organize and search across Items. Labels may be simple strings, or may contain Fields that describe additional metadata which can be further used to organize and search Drive items.
      properties:
        appliedCapabilities:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LabelAppliedCapabilities"
          description: Output only. The capabilities related to this label on applied metadata.
          readOnly: true
        appliedLabelPolicy:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy"
          description: Output only. Behavior of this Label when its applied to Drive items.
          readOnly: true
        createTime:
          description: Output only. The time this label was created.
          format: google-datetime
          readOnly: true
          type: string
        creator:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who created this label.
          readOnly: true
        disableTime:
          description: Output only. The time this label was disabled. This value has no meaning when the label is not disabled.
          format: google-datetime
          readOnly: true
          type: string
        disabler:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who disabled this label. This value has no meaning when the label is not disabled.
          readOnly: true
        displayHints:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LabelDisplayHints"
          description: Output only. UI Display hints for rendering the Label.
          readOnly: true
        fields:
          description: List of Fields in descending priority order.
          items:
            $ref: "#/components/schemas/GoogleAppsDriveLabelsV2Field"
          type: array
        id:
          description: "Output only. Globally unique identifier of this Label. ID makes up part of the Label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`"
          readOnly: true
          type: string
        labelType:
          description: Required. The type of this label.
          enum:
            - LABEL_TYPE_UNSPECIFIED
            - SHARED
            - ADMIN
          type: string
        learnMoreUri:
          description: Custom URL to present to users to allow them to learn more about this label and how it should be used.
          type: string
        lifecycle:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2Lifecycle"
          description: Output only. The lifecycle state of the label including whether it's published, deprecated, and has draft changes.
          readOnly: true
        lockStatus:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LockStatus"
          description: Output only. The LockStatus of this label.
          readOnly: true
        name:
          description: "Output only. Resource name of the Label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below."
          readOnly: true
          type: string
        properties:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LabelProperties"
          description: Required. The basic properties of the Label.
        publishTime:
          description: Output only. The time this label was published. This value has no meaning when the label is not published.
          format: google-datetime
          readOnly: true
          type: string
        publisher:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who published this label. This value has no meaning when the label is not published.
          readOnly: true
        revisionCreateTime:
          description: Output only. The time this label revision was created.
          format: google-datetime
          readOnly: true
          type: string
        revisionCreator:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2UserInfo"
          description: Output only. The user who created this label revision.
          readOnly: true
        revisionId:
          description: "Output only. Revision ID of the Label. Revision ID may be part of the Label `name` depending on the request issued. A new revision is created whenever revisioned properties of a Label are changed. Matches the regex: `([a-zA-Z0-9])+`"
          readOnly: true
          type: string
        schemaCapabilities:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LabelSchemaCapabilities"
          description: Output only. The capabilities the user has on this Label.
          readOnly: true
      type: object
    GoogleAppsDriveLabelsV2LabelAppliedCapabilities:
      description: The capabilities a user has on this Label's applied metadata.
      properties:
        canApply:
          description: Whether the user can apply this Label to items.
          type: boolean
        canRead:
          description: Whether the user can read applied metadata related to this label.
          type: boolean
        canRemove:
          description: Whether the user can remove this Label from items.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy:
      description: Behavior of this Label when its applied to Drive items.
      properties:
        copyMode:
          description: Indicates how the applied Label, and Field values should be copied when a Drive item is copied.
          enum:
            - COPY_MODE_UNSPECIFIED
            - DO_NOT_COPY
            - ALWAYS_COPY
            - COPY_APPLIABLE
          type: string
      type: object
    GoogleAppsDriveLabelsV2LabelDisplayHints:
      description: UI Display hints for rendering the Label.
      properties:
        disabled:
          description: Whether the Label should be shown in the UI as disabled.
          type: boolean
        hiddenInSearch:
          description: This Label should be hidden in the search menu when searching for Drive items.
          type: boolean
        priority:
          description: Order to display label in a list
          format: int64
          type: string
        shownInApply:
          description: This Label should be shown in the apply menu.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2LabelProperties:
      description: Basic properties of the Label.
      properties:
        description:
          description: The description of this Label.
          type: string
        title:
          description: Required. Title of the Label.
          type: string
      type: object
    GoogleAppsDriveLabelsV2LabelSchemaCapabilities:
      description: The capabilities related to this Label when editing the Label.
      properties:
        canDelete:
          description: Whether the user can delete this Label. The user must have permission and the Label must be disabled.
          type: boolean
        canDisable:
          description: Whether the user can disable this Label. The user must have permission and this Label must not already be disabled.
          type: boolean
        canEnable:
          description: Whether the user can enable this Label. The user must have permission and this Label must be disabled.
          type: boolean
        canUpdate:
          description: Whether the user can change this Label.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2Lifecycle:
      description: "The lifecycle state of an object, e.g. Label, Field, or Choice. The Lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -> `PUBLISHED` * `UNPUBLISHED_DRAFT` -> (Deleted) * `PUBLISHED` -> `DISABLED` * `DISABLED` -> `PUBLISHED` * `DISABLED` -> (Deleted) The published and disabled states have some distinct characteristics: * Published - Some kinds of changes may be made to an object in this state, in which case `has_unpublished_changes` will be true. Some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the Label will be rejected. * Disabled - When disabled, the configured `DisabledPolicy` will take effect."
      properties:
        disabledPolicy:
          $ref: "#/components/schemas/GoogleAppsDriveLabelsV2LifecycleDisabledPolicy"
          description: The policy that governs how to show a disabled label, field, or selection choice.
        hasUnpublishedChanges:
          description: Output only. Whether the object associated with this lifecycle has unpublished changes.
          readOnly: true
          type: boolean
        state:
          description: Output only. The state of the object associated with this lifecycle.
          enum:
            - STATE_UNSPECIFIED
            - UNPUBLISHED_DRAFT
            - PUBLISHED
            - DISABLED
            - DELETED
          readOnly: true
          type: string
      type: object
    GoogleAppsDriveLabelsV2LifecycleDisabledPolicy:
      description: The policy that governs how to treat a disabled label, field, or selection choice in different contexts.
      properties:
        hideInSearch:
          description: Whether to hide this disabled object in the search menu for Drive items. * When `false` the object will generally be shown in the UI as disabled (but still permit searching) when searching for Drive items. * When `true` the object will generally be hidden in the UI when searching for Drive items.
          type: boolean
        showInApply:
          description: Whether to show this disabled object in the apply menu on Drive items. * When `true` the object will generally be shown in the UI as disabled and is unselectable. * When `false` the object will generally be hidden in the UI.
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2ListLabelsResponse:
      description: Response for listing Labels.
      properties:
        labels:
          description: Labels.
          items:
            $ref: "#/components/schemas/GoogleAppsDriveLabelsV2Label"
          type: array
        nextPageToken:
          description: The token of the next page in the response.
          type: string
      type: object
    GoogleAppsDriveLabelsV2LockStatus:
      description: Contains information about whether a label component should be considered locked.
      properties:
        locked:
          description: Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component may be implicitly locked even if it is not the direct target of a LabelLock, in which case this field will be false.
          readOnly: true
          type: boolean
      type: object
    GoogleAppsDriveLabelsV2UserInfo:
      description: Information about a user.
      properties:
        person:
          description: The identifier for this user who can be used with the People API to get more information. e.g. people/12345678
          type: string
      type: object
    GoogleTypeColor:
      description: "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ..."
      properties:
        alpha:
          description: "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0)."
          format: float
          type: number
        blue:
          description: The amount of blue in the color as a value in the interval [0, 1].
          format: float
          type: number
        green:
          description: The amount of green in the color as a value in the interval [0, 1].
          format: float
          type: number
        red:
          description: The amount of red in the color as a value in the interval [0, 1].
          format: float
          type: number
      type: object
    GoogleTypeDate:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
