{
  "apis": {
    "va.gov:benefits": {
      "added": "2021-04-06T16:41:01.764Z",
      "info": {
        "contact": {
          "name": "va.gov"
        },
        "description": "The Benefits Intake API allows authorized third-party systems used by Veteran Service Organizations (VSOs), agencies, and Veterans to digitally submit VA benefits claim documents directly to the Veterans Benefits Administration's (VBA) claims intake process. This API handles documents related to the following benefit claim types: \n\n* Compensation\n* Pension/Survivors Benefits\n* Education\n* Fiduciary\n* Insurance\n* Veteran Readiness & Employment (VRE)\n* Board of Veteran Appeals (BVA)\n\nThis API also provides submission status updates until documents are successfully established for VBA claim processing, eliminating the need for users to switch between systems to manually check whether documents have been successfully uploaded.\n\n## Background \nThis API provides a secure, efficient, and tracked alternative to mail or fax for VA benefit claim document submissions. Documents are uploaded directly to the VBA so they can be processed as quickly as possible.\n\n## Technical overview\nThe Benefits Intake API first provides an upload location and unique submission identifier, and then accepts a payload consisting of a document in PDF format, zero or more optional attachments in PDF format, and some JSON metadata. \n\nThe metadata describes the document and attachments, and identifies the person for whom it is being submitted. This payload is encoded as binary multipart/form-data (not base64). The unique identifier supplied with the payload can subsequently be used to request the processing status of the uploaded document package.\n\nTo avoid errors and processing delays, API consumers are encouraged to validate the `zipcode`,`fileNumber`, `veteranFirstName`, `veteranLastName` and `businessLine` fields before submission according to their description in the DocumentUploadMetadata model and use the 'businessLine' attribute for the most efficient processing. Additionally, please ensure no PDF user passwords are used in submitted PDFs. \n\n### Attachment & file size limits\nThere is no limit on the number of files a payload can contain, but size limits do apply.\n\n* Uploaded documents cannot be larger than 21\" x 21\"\n* The entire payload cannot exceed 5 GB\n* No single file in a payload can exceed 100 MB\n\n### Date of receipt\nThe date that documents are successfully submitted through the Benefits Intake API is used as the official VA date of receipt. However, note that until a document status of `received`, `processing`, `success`, or `vbms` is returned, a client cannot consider the document received by VA. \n\nA status of `received` means that the document package has been transmitted, but may not be validated. Any errors with the document package, such as unreadable PDFs or a Veteran not found, will cause the status to change to `error`.\n\nIf the document status is `error`, VA has not received the submission and cannot honor the submission date as the date of receipt.\n\n### Authentication and Authorization\nAPI requests are authorized through a symmetric API token, provided in an HTTP header with name 'apikey'. [Request an API key.](https://developer.va.gov/apply)\n\n### Testing in the sandbox environment\nIn the sandbox environment, the final status of a submission is `received` and submissions do not actually progress to the central mail repository or VBMS. \n\nProgress beyond the `received` status can be simulated for testing. We allow passing in a `Status-Override` header on the `/uploads/{id}` endpoint so that you can change the status of your submission to simulate the various scenarios. \n\nThe available statuses are `pending`, `uploaded`, `received`, `processing`, `success`, `vbms`, and `error`. The meaning of the various statuses is listed below in Models under DocumentUploadStatusAttributes.\n\n### Test data\nWe use mock test data in the sandbox environment. Data is not sent upstream and it is not necessary to align submitted test data with any other systems' data.\n\n### Validating documents\nUse the POST `/uploads/validate_document` endpoint to make sure your documents will pass system file requirements and\nvalidations before you send them through the submissions process. This step is optional but decreases the likelihood\nof individual document errors during the submission process.\n\nValidations performed:\n* Document is a valid PDF (Note: `Content-Type` header value must be \"application/pdf\")\n* Document does not have a user password (an owner password is acceptable)\n* File size does not exceed 100 MB\n* Page size does not exceed 21\" x 21\"\n\n### Upload operation\nAllows a client to upload a multi-part document package (form + attachments + metadata).\n\n1. Client Request: POST https://sandbox-api.va.gov/services/vba_documents/v1/\n    * No request body or parameters required\n\n2. Service Response: A JSON API object with the following attributes:\n    * `guid`: An identifier used for subsequent status requests\n    * `location`: A URL to which the actual document package payload can be submitted in the next step. The URL is specific to this upload request, and should not be re-used for subsequent uploads. The URL is valid for 900 seconds (15 minutes) from the time of this response. If the location is not used within 15 minutes, the GUID will expire. Once expired, status checks on the GUID will return a status of `expired`.\n        * Note: If, after you've submitted a document, the status hasn't changed to `uploaded` before 15 minutes has elapsed, we recommend retrying the upload in order to make sure the document properly reaches our servers. If the upload continues to fail, try encoding the payload as Base64 (See below).\n\n 3. Client Request: PUT to the location URL returned in Step 2.\n    * Request body should be encoded as binary multipart/form-data (base64 also available - see details below), equivalent to that generated by an HTML form submission or using \"curl -F…\". The format is described in more detail below.\n    * No `apikey` authorization header is required for this request, as authorization is embedded in the signed location URL.\n\n4. Service Response: The HTTP status indicates whether the upload was successful.\n    * Additionally, the response includes an ETag header containing an MD5 hash of the submitted payload. This can be compared to the submitted payload to ensure data integrity of the upload.\n\n### Status caching\nDue to current system limitations, data for the `/uploads/report` endpoint is cached for one hour.\n\nA request to the `/uploads/{id}` endpoint will return a real-time status for that GUID, and update its status in `/uploads/report`.\n\nThe `updated_at` field indicates the last time the status for a given GUID was updated.\n\n### Document Submission Statuses\n**Important note:** a submission has not been received by VA until it has a status of Received, Processing, Success, \nor VBMS. Detailed descriptions of what each status means are found in this table.\n\n| Status        | What it means |\n| ---           |     ---     |\n| **Pending**   | Initial status.<br /><br />Indicates no document package has been uploaded yet.<br /><br />Date of Receipt is not yet established with this status |\n| **Uploaded**  | Indicates document package has been successfully uploaded (PUT) from your system to the API server but has not yet been validated.<br /><br />Date of Receipt is not yet established with this status. Any errors with the document package, such as having an unreadable PDF, may cause an Error status. |\n| **Received**  | Indicates document package has been received upstream of the API and is awaiting Processing.<br /><br />The VA Date of Receipt is set when this status is achieved.<br /><br />This is the final status in the sandbox environment unless further progress is simulated. |\n| **Processing**| Indicates the document package is being validated, processed, and made ready to route and work. |\n| **Success**   | Indicates the document package has been successfully received within VA's mail handling system.<br /><br />Success is the final status for a small percentage of submitted packages with claim types, Veteran types, or exception processes that are not worked in VBMS. Most submissions reach a Success status within 1 business day. A small portion will take longer; however, some submissions may take up to 2 weeks to reach a Success status. |\n| **VBMS**      | Indicates this document package was successfully uploaded into a Veteran's eFolder within VBMS.<br /><br />On average, submissions reach VBMS status within 3 business days; however, processing times vary and some submissions may remain in a Success status for several weeks before reaching a VBMS status.<br /><br />Some document packages are worked in VA systems other than VBMS. For these submissions, Success is the final status. |\n| **Error**     | Indicates that there was an error. Refer to the error code and message for further information. |\n| **Expired**   | After a POST request, there is a 15-minute window during which documents must be uploaded via a PUT request.<br /><br />An Expired status means the documents were not successfully uploaded within this 15-minute window. We recommend coding to retry unsuccessful uploads within 15 minutes using the same submission in case of connection issues. |\n\n### Optional Base64 encoding\n\nBase64 is an encoding scheme that converts binary data into text format, so that encoded textual data can be easily transported over networks uncorrupted and without data loss. \n\nBase64 can be used to encode binary multipart/form-data it in its entirety.  Note that the whole payload must be encoded, not individual parts/attachments.\n\nAfter encoding your payload, you'll be required to preface your base64 string with `data:multipart/form-data;base64,` in order to allow our system to distinguish the file type. Your final string payload would look something like `data:multipart/form-data;base64,(encryption string)==` and close with the standard == marker.  Note that the multipart boundaries i.e. -----WebKitFormBoundaryVfOwzCyvug0JmWYo and ending ------WebKitFormBoundaryVfOwzCyvug0JmWYo- must also be included.\n\n### Consumer onboarding process\nWhen you're ready to move to production, [request a production API key.](https://developer.va.gov/go-live)\n",
        "title": "Benefits Intake",
        "version": "1.0.0",
        "x-apisguru-categories": [
          "open_data"
        ],
        "x-logo": {
          "url": "https://api.apis.guru/v2/cache/logo/https_prod-va-gov-assets.s3-us-gov-west-1.amazonaws.com_img_design_icons_apple-touch-icon.png"
        },
        "x-origin": [
          {
            "format": "openapi",
            "url": "https://api.va.gov/services/vba_documents/docs/v1/api",
            "version": "3.0"
          }
        ],
        "x-providerName": "va.gov",
        "x-serviceName": "benefits"
      },
      "updated": "2023-03-06T07:12:59.965Z",
      "swaggerUrl": "https://api.apis.guru/v2/specs/va.gov/benefits/1.0.0/openapi.json",
      "swaggerYamlUrl": "https://api.apis.guru/v2/specs/va.gov/benefits/1.0.0/openapi.yaml",
      "openapiVer": "3.0.0",
      "link": "https://api.apis.guru/v2/specs/va.gov:benefits/1.0.0.json"
    },
    "va.gov:confirmation": {
      "added": "2021-04-06T16:46:05.161Z",
      "info": {
        "contact": {
          "name": "developer.va.gov"
        },
        "description": "The Veteran Confirmation API allows you to confirm Veteran status for a given person. This can be useful for offering Veterans discounts or other benefits.\n\nThe API will only return “Confirmed” or “Not Confirmed”.\n\n## Quickstart Guide\n### 1. Get Access Credentials\nGet started by filling out the form on the [Apply for VA Lighthouse Developer Access](https://developer.va.gov/apply) page.\n\nAfter submitting a request, you will receive your credentials for using the API in the Development environment, which allows you to try it out with mock data before moving to the Production environment.\n\n### 2. Test the API\nIn the endpoint documentation below, we've provided a curl command builder for trying out the API before implementation with your app.\nUse [Test User](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts/confirmation_test_accounts.md) attributes to populate the request body.\n\n### 3. Build your app\nThe base URI for the Veteran Confirmation API in the Sandbox environment is:\n\nhttps://sandbox-api.va.gov/services/veteran_confirmation/v0\n\nIn this environment, use attributes from the list of [Test Users](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts/confirmation_test_accounts.md). Only Test Users can return a `\"confirmed\"` response.\n\nCheck out some of our [sample apps](https://github.com/department-of-veterans-affairs/vets-api-clients). Please visit our VA Lighthouse [Support portal](https://developer.va.gov/support) should you need further assistance.\n\n### 4. Show us a demo and get access to the Production environment\nAfter building your app, we ask that you give us a demo before we set you up with production credentials. Please see the [Path to Production](https://developer.va.gov/go-live) page for more details.\n\n## Authorization\nThis API requires an API key in combination with identifiable information for the person being confirmed listed below. API requests are authorized through a symmetric API token provided in an HTTP header with name `apikey`. Including more information has a better chance of making a match and returning a Confirmed status.\n### Required information:\n* First Name\n* Last Name\n* Date of Birth\n* Social Security Number\n\n### Optional information:\n* Middle Name\n* Gender\n\n## Reference\n### Sandbox vs. Production Data\nAPIs accessed via the Sandbox environment are using the same underlying logic as VA’s production APIs; only the underlying data store is different.\n\n### Master Veteran Index (MVI)\nThe Master Veteran Index confirms a user's identity. In Production, several factors are considered to confirm identity. These include: a user’s first name, last name, date of birth and Social Security number. The MVI is mocked in the Sandbox environment. In this environment, the only factor used to confirm identity is the Social Security number.\n\n### Rate Limiting\nWe implemented basic rate limiting of 60 requests per minute. If you exceed this quota, your request will return a 429 status code. You may petition for increased rate limits by emailing and requests will be decided on a case by case basis.\n\n### Raw Open API Spec\nhttps://api.va.gov/services/veteran_confirmation/docs/v0/api\n",
        "termsOfService": "",
        "title": "Veteran Confirmation",
        "version": "0.0.1",
        "x-apisguru-categories": [
          "open_data"
        ],
        "x-logo": {
          "url": "https://api.apis.guru/v2/cache/logo/https_prod-va-gov-assets.s3-us-gov-west-1.amazonaws.com_img_design_icons_apple-touch-icon.png"
        },
        "x-origin": [
          {
            "format": "openapi",
            "url": "https://api.va.gov/services/veteran_confirmation/docs/v0/api",
            "version": "3.0"
          }
        ],
        "x-providerName": "va.gov",
        "x-serviceName": "confirmation"
      },
      "updated": "2023-03-06T07:12:59.965Z",
      "swaggerUrl": "https://api.apis.guru/v2/specs/va.gov/confirmation/0.0.1/openapi.json",
      "swaggerYamlUrl": "https://api.apis.guru/v2/specs/va.gov/confirmation/0.0.1/openapi.yaml",
      "openapiVer": "3.0.0",
      "link": "https://api.apis.guru/v2/specs/va.gov:confirmation/0.0.1.json"
    },
    "va.gov:facilities": {
      "added": "2021-03-31T13:30:20.111Z",
      "info": {
        "contact": {
          "name": "developer.va.gov"
        },
        "description": "## Background\n\nThis RESTful API provides information about physical VA facilities. Information available includes\ngeographic location, address, phone, hours of operation, and available services.\n\nVA operates several different types of facilities, the types represented in this API include:\n- Health Facilities (vha)\n- Benefits Facilities (vba)\n- Cemeteries (nca)\n- Vet Centers (vc)\n\nTo read an FAQ on how wait times are calculated, click the \"For more information\" link on [this page](https://www.accesstocare.va.gov/PWT/SearchWaitTimes).\n\n## Getting Started\n\n### Base URLs\n\nThe base URLs for the VA Facilities API in the various environments are:\n- Sandbox: `https://sandbox-api.va.gov/services/va_facilities/v0`\n- Production: `https://api.va.gov/services/va_facilities/v0`\n\n### Authorization\n\nAPI requests are authorized through a symmetric API token, provided in an HTTP header with name `apikey`.\n\n### Response Formats\n\nClients may request several response formats by setting the `Accept` header.\n- `application/json` - The default JSON response format complies with JSON API. This media type is *not* available for bulk requests using the `/facilities/all` endpoint. It will return `406 Not Acceptable`.\n- `application/geo+json` - GeoJSON-compliant format, representing each facility as a feature with a point geometry.\n- `application/vnd.geo+json` - Deprecated. Prefer application/geo+json.\n- `text/csv` - Available for the bulk download operation only. Some structured fields are omitted from the CSV response.\n\n### Response Elements\n\nSome data elements within the response are only present for facilities of a given type:\n- The patient satisfaction scores contained in the `satisfaction` element are only applicable\n  to VA health facilities.\n- The patient wait time values contained in the `wait_times` element are only applicable to\n  VA health facilities.\n- The list of available services in the `services` element is only applicable to VA health and\n  benefits facilities.\n- The operational hours special instructions contained in the `operational_hours_special_instructions` element is only applicable to VA health and Vet Center facilities.\n\n### Facility ID Formats and Constraints\n\nA facility ID has the format `prefix_stationNumber`. The prefix is one of nca, vc, vba, or vha. Cemeteries may be national (VA) or non-national; non-national cemeteries have the station number prefixed with an `s`. There are no other constraints on the format. Examples:\n- Health: `vha_402GA`\n- Benefits: `vba_539GB`\n- National cemetery: `nca_063`\n- Non-national cemetery: `nca_s1082`\n- Vet center: `vc_0872MVC`\n\n\n### Mobile Facilities\n\nThe mobile health facilities move regularly within a region. If a facility comes back from this API with `\"mobile\": \"true\"`, the latitude/longitude and address could be inaccurate. To get the exact current location, please call the number listed.\n\n## Deprecations\n\n- `active_status` field is deprecated and replaced with `operating_status`.\n- `application/vnd.geo+json` media type is deprecated and replaced by `application/geo+json`\n\n\n## Reference\n\n- [Raw VA Facilities Open API Spec](https://api.va.gov/services/va_facilities/docs/v0/api)\n- [GeoJSON Format](https://tools.ietf.org/html/rfc7946)\n- [JSON API Format](https://jsonapi.org/format/)",
        "title": "VA Facilities",
        "version": "0.0.1",
        "x-apisguru-categories": [
          "location"
        ],
        "x-logo": {
          "url": "https://api.apis.guru/v2/cache/logo/https_prod-va-gov-assets.s3-us-gov-west-1.amazonaws.com_img_design_icons_apple-touch-icon.png"
        },
        "x-origin": [
          {
            "format": "openapi",
            "url": "https://api.va.gov/services/va_facilities/docs/v0/api",
            "version": "3.0"
          }
        ],
        "x-providerName": "va.gov",
        "x-serviceName": "facilities"
      },
      "updated": "2021-07-05T15:07:17.927Z",
      "swaggerUrl": "https://api.apis.guru/v2/specs/va.gov/facilities/0.0.1/openapi.json",
      "swaggerYamlUrl": "https://api.apis.guru/v2/specs/va.gov/facilities/0.0.1/openapi.yaml",
      "openapiVer": "3.0.1",
      "link": "https://api.apis.guru/v2/specs/va.gov:facilities/0.0.1.json"
    },
    "va.gov:forms": {
      "added": "2021-04-06T16:44:51.347Z",
      "info": {
        "contact": {
          "name": "va.gov"
        },
        "description": "Use the VA Forms API to search for VA forms, get the form's PDF link and metadata, and check for new versions.\n\nVisit our VA Lighthouse [Contact Us page](https://developer.va.gov/support) for further assistance.\n\n## Background\nThis API offers an efficient way to stay up-to-date with the latest VA forms and information. The forms information listed on VA.gov matches the information returned by this API.\n- Search by form number, keyword, or title\n- Get a link to the form in PDF format\n- Get detailed form metadata including the number of pages, related forms, benefit categories, language, and more\n- Retrieve the latest date of PDF changes and the SHA256 checksum\n- Identify when a form is deleted by the VA\n\n## Technical summary\nThe VA Forms API collects form data from the official VA Form Repository on a nightly basis.  The Index endpoint can return all available forms or, if an optional query parameter is passed, will return only forms that may relate to the query value. When a valid form name is passed to the Show endpoint, it will return a single form with additional metadata and full revision history. A JSON response is given with the PDF link (if published) and the corresponding form metadata.\n\n### Authentication and authorization\nThe form information shared by this API is publicly available.  API requests are authorized through a symmetric API token, provided in an HTTP header with name apikey. [Get a sandbox API Key](https://developer.va.gov/apply).\n\n### Testing in sandbox environment\nForm data in the sandbox environment is for testing your API only, and is not guaranteed to be up-to-date. This API also has a reduced API rate limit. When you're ready to move to production, be sure to [request a production API key.](https://developer.va.gov/go-live)\n\n### SHA256 revision history\nEach form is checked nightly for recent file changes. A corresponding SHA256 checksum is calculated, which provides a record of when the PDF changed and the SHA256 hash that was calculated. This allows end users to know that they have the most recent version and can verify the integrity of a previously downloaded PDF.\n\n### Valid PDF link\nAdditionally, during the nightly refresh process, the link to the form PDF is verified and the `valid_pdf` metadata is updated accordingly. If marked `true`, the link is valid and is a current form. If marked `false`, the link is either broken or the form has been removed.\n\n### Deleted forms\nIf the `deleted_at` metadata is set, that means the VA has removed this form from the repository and it is no longer to be used.\n",
        "title": "VA Forms",
        "version": "0.0.0",
        "x-apisguru-categories": [
          "forms"
        ],
        "x-logo": {
          "url": "https://api.apis.guru/v2/cache/logo/https_prod-va-gov-assets.s3-us-gov-west-1.amazonaws.com_img_design_icons_apple-touch-icon.png"
        },
        "x-origin": [
          {
            "format": "openapi",
            "url": "https://api.va.gov/services/va_forms/docs/v0/api",
            "version": "3.0"
          }
        ],
        "x-providerName": "va.gov",
        "x-serviceName": "forms"
      },
      "updated": "2023-03-06T07:12:59.965Z",
      "swaggerUrl": "https://api.apis.guru/v2/specs/va.gov/forms/0.0.0/openapi.json",
      "swaggerYamlUrl": "https://api.apis.guru/v2/specs/va.gov/forms/0.0.0/openapi.yaml",
      "openapiVer": "3.0.0",
      "link": "https://api.apis.guru/v2/specs/va.gov:forms/0.0.0.json"
    }
  }
}